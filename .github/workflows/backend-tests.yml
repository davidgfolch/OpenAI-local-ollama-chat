name: Backend unit tests

on: [push]

jobs:
  build-lint-and-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
    defaults:
      run:
        working-directory: backend
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        # Add conda to system path
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
        conda env update --file env.yml --name base
    # - name: Lint with flake8
    #   run: |
    #     # cd backend
    #     conda install --solver=classic conda-forge::conda-libmamba-solver conda-forge::libmamba conda-forge::libmambapy conda-forge::libarchive
    #     conda install flake8
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --statistics --config=${{github.workspace}}/backend/.flake8
    - name: Test
      run: |
        pytest
    - name: Coverage
      run: |
        coverage run --source=src -m pytest
    - name: Coverage report
      run: |
        coverage report -m
        # coverage report --fail-under=90 -m
    - name: Coverage badge
      run: |
        coverage-badge -o coverage.svg -f
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v16
      id: verify-changed-files
      with:
        files: coverage.svg
    - name: Commit files
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add coverage.svg
        git commit -m "Updated coverage.svg"

    # - name: "Upload coverage data"
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: covdata
    #     path: /home/runner/work/OpenAI-local-ollama-chat/OpenAI-local-ollama-chat/backend/coverage.svg
    #     overwrite: true







    # coverage-badge-py https://github.com/tj-actions/coverage-badge-py?tab=readme-ov-file#example
    # - name: Coverage Badge
    #   uses: tj-actions/coverage-badge-py@v2

    # - name: Verify Changed files
    #   uses: tj-actions/verify-changed-files@v16
    #   id: verify-changed-files
    #   with:
    #     files: coverage.svg

    # - name: Commit files
    #   if: steps.verify-changed-files.outputs.files_changed == 'true'
    #   run: |
    #     git config --local user.email "github-actions[bot]@users.noreply.github.com"
    #     git config --local user.name "github-actions[bot]"
    #     git add coverage.svg
    #     git commit -m "Updated coverage.svg"

    # - name: Push changes
    #   if: steps.verify-changed-files.outputs.files_changed == 'true'
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.github_token }}
    #     branch: ${{ github.ref }} 
